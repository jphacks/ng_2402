import axios from "axios";
import { Session } from "next-auth";
import { v4 as createUuid } from "uuid";
import { Model } from "@/types/model";

const mockData: Model = {
  name: "とらっく",
  color: "#FFD700",
  procedure: {
    "1": {
      description: "よこに はんぶんに おりめをつける。",
      fixBoards: [
        [
          [20, 20, 0],
          [20, 0, 0],
          [-20, 0, 0],
          [-20, 20, 0],
        ],
      ],
      moveBoards: [
        [
          [20, 0, 0],
          [20, -20, 0],
          [-20, -20, 0],
          [-20, 0, 0],
        ],
      ],
      rotateAxis: [
        [-20, 0, 0],
        [20, 0, 0],
      ],
    },
    "2": {
      description: "たてに はんぶんに おりめをつける。",
      fixBoards: [
        [
          [20, 20, 0],
          [20, -20, 0],
          [0, -20, 0],
          [0, 20, 0],
        ],
      ],
      moveBoards: [
        [
          [0, 20, 0],
          [0, -20, 0],
          [-20, -20, 0],
          [-20, 20, 0],
        ],
      ],
      rotateAxis: [
        [0, 20, 0],
        [0, -20, 0],
      ],
    },
    "3": {
      description: "したがわを まんなかのせんまで おる。",
      fixBoards: [
        [
          [20, 20, 0],
          [20, -13.333333333333334, 0],
          [-20, -13.333333333333334, 0],
          [-20, 20, 0],
        ],
      ],
      moveBoards: [
        [
          [20, -13.333333333333334, 0],
          [20, -20, 0],
          [-20, -20, 0],
          [-20, -13.333333333333334, 0],
        ],
      ],
      rotateAxis: [
        [-20, -13.333333333333334, 0],
        [20, -13.333333333333334, 0],
      ],
    },
    "4": {
      description: "はじっこを ちょっとおる。",
      fixBoards: [
        [
          [20, 20, 0],
          [20, -13.333333333333334, 0],
          [-20, -13.333333333333334, 0],
          [-20, 20, 0],
        ],
        [
          [4, -6.666666666666667, 0.001],
          [-20, -6.666666666666667, 0.001],
          [-20, -13.333333333333334, 0.001],
          [20, -13.333333333333334, 0.001],
        ],
      ],
      moveBoards: [
        [
          [20, -6.666666666666667, 0.001],
          [4, -6.666666666666667, 0.001],
          [20, -13.333333333333334, 0.001],
        ],
      ],
      rotateAxis: [
        [20, -13.333333333333334, 0.001],
        [4, -6.666666666666667, 0.001],
      ],
    },
    "5": {
      description: "はじっこを ちょっとおる。",
      fixBoards: [
        [
          [20, 20, 0],
          [20, -13.333333333333334, 0],
          [-20, -13.333333333333334, 0],
          [-20, 20, 0],
        ],
        [
          [4, -6.666666666666667, 0.001],
          [-4, -6.666666666666667, 0.001],
          [-20, -13.333333333333334, 0.001],
          [20, -13.333333333333334, 0.001],
        ],
        [
          [20, -13.333333333333334, 0.002],
          [15.266272189349113, -18.0276134122288, 0.002],
          [4, -6.666666666666667, 0.002],
        ],
      ],
      moveBoards: [
        [
          [-4, -6.666666666666667, 0.001],
          [-20, -6.666666666666667, 0.001],
          [-20, -13.333333333333334, 0.001],
        ],
      ],
      rotateAxis: [
        [-4, -6.666666666666667, 0.001],
        [-20, -13.333333333333334, 0.001],
      ],
    },
    "6": {
      description: "うえぶぶんを やまおりする。",
      fixBoards: [
        [
          [20, 6.666666666666667, 0],
          [20, -13.333333333333334, 0],
          [-20, -13.333333333333334, 0],
          [-20, 6.666666666666667, 0],
        ],
        [
          [4, -6.666666666666667, 0.001],
          [-4, -6.666666666666667, 0.001],
          [-20, -13.333333333333334, 0.001],
          [20, -13.333333333333334, 0.001],
        ],
        [
          [20, -13.333333333333334, 0.002],
          [15.266272189349113, -18.0276134122288, 0.002],
          [4, -6.666666666666667, 0.002],
        ],
        [
          [-20, -13.333333333333334, 0.002],
          [-4, -6.666666666666667, 0.002],
          [-15.266272189349113, -18.0276134122288, 0.002],
        ],
      ],
      moveBoards: [
        [
          [20, 20, 0],
          [20, 6.666666666666667, 0],
          [-20, 6.666666666666667, 0],
          [-20, 20, 0],
        ],
      ],
      rotateAxis: [
        [-20, 6.666666666666667, 0],
        [20, 6.666666666666667, 0],
      ],
    },
    "7": {
      description: "はしっこを ちょっとめくる。",
      fixBoards: [
        [
          [20, 6.666666666666667, 0],
          [20, -13.333333333333334, 0],
          [-20, -13.333333333333334, 0],
          [-20, 6.666666666666667, 0],
        ],
        [
          [4, -6.666666666666667, 0.001],
          [-4, -6.666666666666667, 0.001],
          [-20, -13.333333333333334, 0.001],
          [20, -13.333333333333334, 0.001],
        ],
        [
          [20, -13.333333333333334, 0.002],
          [15.266272189349113, -18.0276134122288, 0.002],
          [4, -6.666666666666667, 0.002],
        ],
        [
          [-20, -13.333333333333334, 0.002],
          [-4, -6.666666666666667, 0.002],
          [-15.266272189349113, -18.0276134122288, 0.002],
        ],
        [
          [20, 6.666666666666667, -0.001],
          [-20, 6.666666666666667, -0.001],
          [-6.666666666666667, -6.666666666666667, -0.001],
          [20, -6.666666666666667, -0.001],
        ],
      ],
      moveBoards: [
        [
          [-20, 6.666666666666667, -0.001],
          [-20, -6.666666666666667, -0.001],
          [-6.666666666666667, -6.666666666666667, -0.001],
        ],
      ],
      rotateAxis: [
        [-6.666666666666667, -6.666666666666667, -0.001],
        [-20, 6.666666666666667, -0.001],
      ],
    },
    "8": {
      description: "はしっこを ちょっとおる。",
      fixBoards: [
        [
          [20, 6.666666666666667, 0],
          [20, -13.333333333333334, 0],
          [-20, -13.333333333333334, 0],
          [-20, -3.3333333333333335, 0],
          [-10, 6.666666666666667, 0],
        ],
        [
          [4, -6.666666666666667, 0.001],
          [-4, -6.666666666666667, 0.001],
          [-20, -13.333333333333334, 0.001],
          [20, -13.333333333333334, 0.001],
        ],
        [
          [20, -13.333333333333334, 0.002],
          [15.266272189349113, -18.0276134122288, 0.002],
          [4, -6.666666666666667, 0.002],
        ],
        [
          [-20, -13.333333333333334, 0.002],
          [-4, -6.666666666666667, 0.002],
          [-15.266272189349113, -18.0276134122288, 0.002],
        ],
        [
          [-10, 6.666666666666667, -0.001],
          [-15, 1.3333333333333333, -0.001],
          [-6.666666666666667, -6.666666666666667, -0.001],
          [20, -6.666666666666667, -0.001],
          [20, 6.666666666666667, -0.001],
        ],
        [
          [-6.666666666666667, 6.666666666666667, -0.002],
          [-6.666666666666667, -6.666666666666667, -0.002],
          [-15, 1.3333333333333333, -0.002],
          [-10, 6.666666666666667, -0.002],
        ],
      ],
      moveBoards: [
        [
          [-10, 6.666666666666667, 0],
          [-20, -3.3333333333333335, 0],
          [-20, 6.666666666666667, 0],
        ],
        [
          [-15, 1.3333333333333333, -0.001],
          [-10, 6.666666666666667, -0.001],
          [-20, 6.666666666666667, -0.001],
        ],
        [
          [-20, 6.666666666666667, -0.002],
          [-10, 6.666666666666667, -0.002],
          [-15, 1.3333333333333333, -0.002],
        ],
      ],
      rotateAxis: [
        [-20, -3.3333333333333335, -0.002],
        [-10, 6.666666666666667, -0.002],
      ],
    },
  },
};

const touchData = (
  data: Model,
  uuid: string,
  mail: string | null | undefined
) => {
  if (!mail) return;
  data["id"] = uuid;
  data["searchKeyword"] = [data.name];
  data[
    "imageUrl"
  ] = `${process.env.NEXT_PUBLIC_R2_BUCKET_URL}/origami/images/${uuid}.png`;
  return data;
};

export const insertData = async (image: File, session: Session | null) => {
  const uuid = createUuid();
  if (!session) {
    console.log("ログインしてください");
  } else {
    const fixedData = touchData(mockData, uuid, session.user?.email);

    const jsonData = JSON.stringify(fixedData);
    const formData = new FormData();
    formData.append("mail", session.user?.email || "");
    formData.append("id", uuid);
    formData.append("data", jsonData); // 必要に応じて JSON 文字列に変換
    formData.append("image", image); // image は File オブジェクト
    await axios.post("/api/data", formData).then(() => {
      console.log("upload完了");
    });
  }
};
