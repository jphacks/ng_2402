"use client";
import React, { useState } from "react";
import { useSession } from "next-auth/react";
import { insertData } from "@/utils/upload-data";
import { Model } from "@/types/model";

const mockData: Model = {
  name: "とらっく",
  color: "#FFD700",
  procedure: {
    "1": {
      description: "よこに はんぶんに おりめをつける。",
      fixBoards: [
        [
          [20, 20, 0],
          [20, 0, 0],
          [-20, 0, 0],
          [-20, 20, 0],
        ],
      ],
      moveBoards: [
        [
          [20, 0, 0],
          [20, -20, 0],
          [-20, -20, 0],
          [-20, 0, 0],
        ],
      ],
      rotateAxis: [
        [-20, 0, 0],
        [20, 0, 0],
      ],
    },
    "2": {
      description: "たてに はんぶんに おりめをつける。",
      fixBoards: [
        [
          [20, 20, 0],
          [20, -20, 0],
          [0, -20, 0],
          [0, 20, 0],
        ],
      ],
      moveBoards: [
        [
          [0, 20, 0],
          [0, -20, 0],
          [-20, -20, 0],
          [-20, 20, 0],
        ],
      ],
      rotateAxis: [
        [0, 20, 0],
        [0, -20, 0],
      ],
    },
    "3": {
      description: "したがわを まんなかのせんまで おる。",
      fixBoards: [
        [
          [20, 20, 0],
          [20, -13.333333333333334, 0],
          [-20, -13.333333333333334, 0],
          [-20, 20, 0],
        ],
      ],
      moveBoards: [
        [
          [20, -13.333333333333334, 0],
          [20, -20, 0],
          [-20, -20, 0],
          [-20, -13.333333333333334, 0],
        ],
      ],
      rotateAxis: [
        [-20, -13.333333333333334, 0],
        [20, -13.333333333333334, 0],
      ],
    },
    "4": {
      description: "はじっこを ちょっとおる。",
      fixBoards: [
        [
          [20, 20, 0],
          [20, -13.333333333333334, 0],
          [-20, -13.333333333333334, 0],
          [-20, 20, 0],
        ],
        [
          [4, -6.666666666666667, 0.001],
          [-20, -6.666666666666667, 0.001],
          [-20, -13.333333333333334, 0.001],
          [20, -13.333333333333334, 0.001],
        ],
      ],
      moveBoards: [
        [
          [20, -6.666666666666667, 0.001],
          [4, -6.666666666666667, 0.001],
          [20, -13.333333333333334, 0.001],
        ],
      ],
      rotateAxis: [
        [20, -13.333333333333334, 0.001],
        [4, -6.666666666666667, 0.001],
      ],
    },
    "5": {
      description: "はじっこを ちょっとおる。",
      fixBoards: [
        [
          [20, 20, 0],
          [20, -13.333333333333334, 0],
          [-20, -13.333333333333334, 0],
          [-20, 20, 0],
        ],
        [
          [4, -6.666666666666667, 0.001],
          [-4, -6.666666666666667, 0.001],
          [-20, -13.333333333333334, 0.001],
          [20, -13.333333333333334, 0.001],
        ],
        [
          [20, -13.333333333333334, 0.002],
          [15.266272189349113, -18.0276134122288, 0.002],
          [4, -6.666666666666667, 0.002],
        ],
      ],
      moveBoards: [
        [
          [-4, -6.666666666666667, 0.001],
          [-20, -6.666666666666667, 0.001],
          [-20, -13.333333333333334, 0.001],
        ],
      ],
      rotateAxis: [
        [-4, -6.666666666666667, 0.001],
        [-20, -13.333333333333334, 0.001],
      ],
    },
    "6": {
      description: "うえぶぶんを やまおりする。",
      fixBoards: [
        [
          [20, 6.666666666666667, 0],
          [20, -13.333333333333334, 0],
          [-20, -13.333333333333334, 0],
          [-20, 6.666666666666667, 0],
        ],
        [
          [4, -6.666666666666667, 0.001],
          [-4, -6.666666666666667, 0.001],
          [-20, -13.333333333333334, 0.001],
          [20, -13.333333333333334, 0.001],
        ],
        [
          [20, -13.333333333333334, 0.002],
          [15.266272189349113, -18.0276134122288, 0.002],
          [4, -6.666666666666667, 0.002],
        ],
        [
          [-20, -13.333333333333334, 0.002],
          [-4, -6.666666666666667, 0.002],
          [-15.266272189349113, -18.0276134122288, 0.002],
        ],
      ],
      moveBoards: [
        [
          [20, 20, 0],
          [20, 6.666666666666667, 0],
          [-20, 6.666666666666667, 0],
          [-20, 20, 0],
        ],
      ],
      rotateAxis: [
        [-20, 6.666666666666667, 0],
        [20, 6.666666666666667, 0],
      ],
    },
    "7": {
      description: "はしっこを ちょっとめくる。",
      fixBoards: [
        [
          [20, 6.666666666666667, 0],
          [20, -13.333333333333334, 0],
          [-20, -13.333333333333334, 0],
          [-20, 6.666666666666667, 0],
        ],
        [
          [4, -6.666666666666667, 0.001],
          [-4, -6.666666666666667, 0.001],
          [-20, -13.333333333333334, 0.001],
          [20, -13.333333333333334, 0.001],
        ],
        [
          [20, -13.333333333333334, 0.002],
          [15.266272189349113, -18.0276134122288, 0.002],
          [4, -6.666666666666667, 0.002],
        ],
        [
          [-20, -13.333333333333334, 0.002],
          [-4, -6.666666666666667, 0.002],
          [-15.266272189349113, -18.0276134122288, 0.002],
        ],
        [
          [20, 6.666666666666667, -0.001],
          [-20, 6.666666666666667, -0.001],
          [-6.666666666666667, -6.666666666666667, -0.001],
          [20, -6.666666666666667, -0.001],
        ],
      ],
      moveBoards: [
        [
          [-20, 6.666666666666667, -0.001],
          [-20, -6.666666666666667, -0.001],
          [-6.666666666666667, -6.666666666666667, -0.001],
        ],
      ],
      rotateAxis: [
        [-6.666666666666667, -6.666666666666667, -0.001],
        [-20, 6.666666666666667, -0.001],
      ],
    },
    "8": {
      description: "はしっこを ちょっとおる。",
      fixBoards: [
        [
          [20, 6.666666666666667, 0],
          [20, -13.333333333333334, 0],
          [-20, -13.333333333333334, 0],
          [-20, -3.3333333333333335, 0],
          [-10, 6.666666666666667, 0],
        ],
        [
          [4, -6.666666666666667, 0.001],
          [-4, -6.666666666666667, 0.001],
          [-20, -13.333333333333334, 0.001],
          [20, -13.333333333333334, 0.001],
        ],
        [
          [20, -13.333333333333334, 0.002],
          [15.266272189349113, -18.0276134122288, 0.002],
          [4, -6.666666666666667, 0.002],
        ],
        [
          [-20, -13.333333333333334, 0.002],
          [-4, -6.666666666666667, 0.002],
          [-15.266272189349113, -18.0276134122288, 0.002],
        ],
        [
          [-10, 6.666666666666667, -0.001],
          [-15, 1.3333333333333333, -0.001],
          [-6.666666666666667, -6.666666666666667, -0.001],
          [20, -6.666666666666667, -0.001],
          [20, 6.666666666666667, -0.001],
        ],
        [
          [-6.666666666666667, 6.666666666666667, -0.002],
          [-6.666666666666667, -6.666666666666667, -0.002],
          [-15, 1.3333333333333333, -0.002],
          [-10, 6.666666666666667, -0.002],
        ],
      ],
      moveBoards: [
        [
          [-10, 6.666666666666667, 0],
          [-20, -3.3333333333333335, 0],
          [-20, 6.666666666666667, 0],
        ],
        [
          [-15, 1.3333333333333333, -0.001],
          [-10, 6.666666666666667, -0.001],
          [-20, 6.666666666666667, -0.001],
        ],
        [
          [-20, 6.666666666666667, -0.002],
          [-10, 6.666666666666667, -0.002],
          [-15, 1.3333333333333333, -0.002],
        ],
      ],
      rotateAxis: [
        [-20, -3.3333333333333335, -0.002],
        [-10, 6.666666666666667, -0.002],
      ],
    },
  },
};

const ImageBlobUploader: React.FC = () => {
  const [selectedFile, setSelectedFile] = useState<File | null>(null);
  const { data: session } = useSession();
  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const file = e.target.files?.[0];
    if (file) {
      if (file.type !== "image/png") {
        alert("PNG形式の画像を選択してください。");
        return;
      }
      setSelectedFile(file);
    }
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();

    if (!selectedFile) {
      console.log("画像ファイルを選択してください。");
      return;
    }

    try {
      insertData(selectedFile, session, mockData);
    } catch (error) {
      console.error("エラー:", error);
    }
  };

  return (
    <div style={{ padding: "2rem" }}>
      <h1>画像をBlob形式で取得してアップロード</h1>
      <form onSubmit={handleSubmit}>
        <div>
          <label>PNG画像:</label>
          <input
            type="file"
            accept="image/png"
            onChange={handleFileChange}
            required
          />
        </div>
        <button type="submit">アップロード</button>
      </form>
    </div>
  );
};

export default ImageBlobUploader;
